{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","selectGood","item","setState","push","removeGood","indexOfGood","indexOf","splice","clearSelects","getTitle","length","join","slice","className","this","map","good","isSelect","includes","classNames","goods__active","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACJ,GAGb,OAFAA,EAAMC,cAAcI,KAAKF,GAElB,CAAEF,cAAeD,EAAMC,mB,EAIlCK,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACJ,GACb,IAAMO,EAAcP,EAAMC,cAAcO,QAAQL,GAIhD,OAFAH,EAAMC,cAAcQ,OAAOF,EAAa,GAEjC,CAAEN,cAAeD,EAAMC,mB,EAIlCS,aAAe,WACb,EAAKN,SAAS,CACZH,cAAe,M,EAInBU,SAAW,WACT,IAAQV,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcW,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUX,EAAc,GAAxB,gBAEF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAcY,KAAK,SAA7B,iBAEF,QACE,MAAM,GAAN,OAAUZ,EAAca,MAAM,GAAI,GAAGD,KAAK,MAA1C,gBAAuDZ,EAAcA,EAAcW,OAAS,GAA5F,mB,4CAIN,WAAU,IAAD,OACP,OACE,qBAAKG,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,qBAAIA,UAAU,cAAd,4BAEG,IACAC,KAAKL,cAGR,oBAAII,UAAU,aAAd,SACGjB,EAAgBmB,KAAI,SAAAC,GACnB,IAAMC,EAAW,EAAKnB,MAAMC,cAAcmB,SAASF,GAEnD,OACE,uBACEH,UAAWM,IAAW,mBACpB,CACEC,cAAeH,IAHrB,SAOE,+BACGD,EACD,wBACEK,KAAK,SACLR,UAAU,MACVS,QAASL,EACL,kBAAM,EAAKb,WAAWY,IACtB,kBAAM,EAAKhB,WAAWgB,IAL5B,SAOGC,EAAW,SAAW,eAXtBD,QAmBZF,KAAKhB,MAAMC,cAAcW,OAAS,EAE/B,wBACEW,KAAK,SACLR,UAAU,YACVS,QAAS,kBAAM,EAAKd,gBAHtB,mBAQA,c,GAhGIe,IAAMC,WAwGT3B,IC3Hf4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e542c9cc.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[]\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  selectGood = (item: string) => {\n    this.setState((state: State) => {\n      state.selectedGoods.push(item);\n\n      return { selectedGoods: state.selectedGoods };\n    });\n  };\n\n  removeGood = (item: string) => {\n    this.setState((state: State) => {\n      const indexOfGood = state.selectedGoods.indexOf(item);\n\n      state.selectedGoods.splice(indexOfGood, 1);\n\n      return { selectedGoods: state.selectedGoods };\n    });\n  };\n\n  clearSelects = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  getTitle = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      case 2:\n        return `${selectedGoods.join(' and ')} are selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"goods\">\n          <h1 className=\"goods-title\">\n            Selected goods:\n            {' '}\n            {this.getTitle()}\n          </h1>\n\n          <ul className=\"goods-list\">\n            {goodsFromServer.map(good => {\n              const isSelect = this.state.selectedGoods.includes(good);\n\n              return (\n                <label\n                  className={classNames('goods-list__item',\n                    {\n                      goods__active: isSelect,\n                    })}\n                  key={good}\n                >\n                  <li>\n                    {good}\n                    <button\n                      type=\"button\"\n                      className=\"btn\"\n                      onClick={isSelect\n                        ? () => this.removeGood(good)\n                        : () => this.selectGood(good)}\n                    >\n                      {isSelect ? 'Remove' : 'Select'}\n                    </button>\n                  </li>\n                </label>\n              );\n            })}\n          </ul>\n\n          {this.state.selectedGoods.length > 0\n            ? (\n              <button\n                type=\"button\"\n                className=\"clear-btn\"\n                onClick={() => this.clearSelects()}\n              >\n                Clear\n              </button>\n            )\n            : null}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}